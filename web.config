<configuration>
  <system.webServer>

    <!-- Disable WebSocket -->
    <webSocket enabled="false" />

    <!-- Define handlers for Node.js -->
    <handlers>
      <!-- Handle the server.js file with the iisnode module -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
    </handlers>

    <rewrite>
      <rules>
        <!-- Ignore requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js/debug[\/]?" />
        </rule>

        <!-- Serve static content from the /public folder -->
        <rule name="StaticContent" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" />
          </conditions>
          <action type="Rewrite" url="public/{R:1}" />
        </rule>

        <!-- Map all other URLs to the node.js entry point (server.js) -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server.js"/>
        </rule>
      </rules>
    </rewrite>

    <!-- Configure MIME types for any custom files -->
    <staticContent>
      <remove fileExtension=".shard1" />
      <mimeMap fileExtension=".shard1" mimeType="application/octet-stream" />
      <remove fileExtension=".shard2" />
      <mimeMap fileExtension=".shard2" mimeType="application/octet-stream" />
    </staticContent>

    <!-- Prevent certain directories from being served -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Pass through error responses untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!-- Enable iisnode logging -->
    <iisnode node_env="uat" loggingEnabled="true" logDirectory="iisnode"/>
  </system.webServer>
</configuration>
